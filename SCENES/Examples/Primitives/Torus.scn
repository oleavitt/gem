//---------------------------------------------------------
//	The torus object
//
//  usage:
//  torus <center point>, <major_radius>, <minor_radius>
//  {
//	   <object modifiers>
//  }
//
//  torus <0, 0, 0>, 2, 0.5
//	{
//	   <object modifiers>
//  }
//
//  torus
//	{
//     center = <0, 0, 0>;
//     rmajor = 2;
//     rminor = 0.5;
//
//     // Note: Torus oriented around the 'Z' axis'
//     // Use 'rotate <x, y, z>' to change orientation of torus.
//	   <object modifiers>
//  }
//
//---------------------------------------------------------

// Include a collection of pre-defined colors.
include "colors.inc"

// Include some pre-defined basic surface types.
include "basicsurfs.inc"

// Main entry point to generate the scene
main
{
	// Set up the viewport - the 'camera' or 'eye'
	viewport
	{
		from = <0, -20, 20>;
		at = <0, 0, 1>;
		angle = 30;
	}

	// Set up a couple of light sources
	light
	{
		location = <-25, -25, 50>;
		color = 0.5;
	}
	light
	{
		location = <25, -25, 50>;
		color = 0.5;
	}

	// And now, our featured item: The Torus!
	// Everything in the scene is made of the torus primitive
	// and nothing else.

	// The torus
	torus <0, 0, 1>, 3, 0.5
	{
		Gloss { color = Red; }
	}

	// A stretched torus
	torus <0, 0, 0>, 2, 0.25
	{
		Gloss { color = Blue; }

		scale <1, 3, 1>;
		translate <-6, 0, 1>;
	}

	// Another stretched torus
	torus <0, 0, 0>, 2, 0.25
	{
		Gloss { color = Green; }

		scale <1, 1, 10>;
		translate <6, 0, 3>;
	}

	// A floor made of concentric tori
	float MajorRadius;
	float MinorRadius = 1;
	for (MajorRadius = MinorRadius; MajorRadius < 100; MajorRadius = MajorRadius + MinorRadius*2)
		torus <0, 0, 0>, MajorRadius, MinorRadius
		{
			Matte;

			// Add a little random rotation.
			scale 0.1;
			rotate (vrand() - 0.5) * 3;
		}
}
