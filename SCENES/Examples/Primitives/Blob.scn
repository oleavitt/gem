//---------------------------------------------------------
//	The blob object
//
//	usage:
//  blob <threshold>
//  {
//     // one or more blob elements:
//     sphere <center>, <radius>, <field strength>;
//     cylinder <start point>, <end point>, <radius>, <field strength>;
//     plane <center>, <normal>, <distance>, <field strength>;
//
//	   <object modifiers>
//  }
//
//  blob 0.25
//	{
//     sphere <-0.75, 0, 0>, 1;
//     sphere <0.75, 0, 0>, 1;
//	   <object modifiers>
//  }
//
//---------------------------------------------------------

// Include a collection of pre-defined colors.
include "colors.inc"

// Include some pre-defined basic surface types.
include "basicsurfs.inc"

// Main entry point to generate the scene
main
{
	// Set up the viewport - the 'camera' or 'eye'
	viewport
	{
		from = <0, -10, 5>;
		at = <0, 0, 0>;
		angle = 30;
	}

	// create two point light sources
	// light from <x, y, z>, color <r, g, b>, falloff factor (0 = none)
	light
	{
		location = <0, 0, 10>;
		color = 0.5;
	}
	light
	{
		location = <10, -10, 10>;
		color = 0.5;
	}

	//
	// create some objects...
	// blob threshold { spherical, cylindrical, planar elements optional modifiers }
	// Syntax for the various elements that compose a blob:
	// sphere center <x, y, z>, radius, field strength (optional - default = 1)
	// cylinder  endpoint1 <x, y, z>, endpoint2 <x, y, z>, radius, field strength (optional - default = 1)
	// plane origin <x, y, z>, direction <dx, dy, dz>, distance, field strength (optional - default = 1)
	//
	// Tip:
	// Blob objects created with parameters the are less than one unit in size may
	// appear to have 'zits' or large portions may be missing.
	// This is due to floating point round-off errors.
	// A work-around for this is to create a blob using parameters that are at least one
	// unit, or larger, and then scale down the blob using a 'scale <x, y, z>' statement
	// if a small object is desired.
	// This was done with the grid of six cylinders below.
	//

	// Two spheres just touching one another. 
	blob 0.2
	{
		sphere <-0.75, 0, 0>, 1;
		sphere <0.75, 0, 0>, 1;

		// give it a shiny red surface
		Gloss { color = Red; }

		// move it up a little
		translate <0, 0, 2>;
	}

	// Two spheres, one with a negative (repelling) field strength.
	blob 0.2
	{
		sphere <0, 0, 0>, 1;
		sphere <0, 0, 0.75>, 0.75, -2;

		// Give it a metallic blue mirror.
		Mirror { reflection = <0.5, 0.5, 0.8>; }

		// move it up and over a little
		translate <1.75, -4, 1>;
	}

	// A 'welded' grid made of six cylindrical elements.
	blob 0.5
	{
		cylinder <-15, 10, 1>, <15, 10, 1>, 1;
		cylinder <-15, 0, 1>, <15, 0, 1>, 1;
		cylinder <-15, -10, 1>, <15, -10, 1>, 1;
		cylinder <10, -15, 0>, <10, 15, 0>, 1;
		cylinder <0, -15, 0>, <0, 15, 0>, 1;
		cylinder <-10, -15, 0>, <-10, 15, 0>, 1;

		// give it a shiney lemon yellow surface
		Gloss { color = <1, 1, 0.5>; }

		// scale down to desired size - see Tip above
		scale <0.1, 0.1, 0.1>;

		// move it up and forward a little
		translate <0, -1, 0.5>;
	}

	// A planar blob for the floor and walls
	blob 0.5
	{
		plane <0, 0, 0>, <0, 0, 1>, 1;
		plane <0, 3, 0>, <0, -1, 0>, 1;
		plane <-3, 0, 0>, <1, 0, 0>, 1;

		// Add a sphere rising up out of the floor.
		sphere <3, 0, 1>, 1;

		// give it a matte white surface
		Matte { color = White; }
	}

	// A triangle of blobs.
	blob 0.75
	{
		// Three equally charged spheres in a triangle.
		sphere <0, 0, 1>, 1.25, 3;
		sphere <-0.866, 0, -0.5>, 1.25, 3;
		sphere <0.866, 0, -0.5>, 1.25, 3;

		// A negatively charged sphere pushing a hole in the center.
		sphere <0, 0, 0>, 1, -3;

		// give it a shiny cyan surface
		Gloss { color = Cyan; }

		scale 0.5;
		translate <-0.5, -4, 1>;
	}
}