//---------------------------------------------------------
//	Testing...1-2-3...Testing....Testing....
//---------------------------------------------------------

// TODO: Recognize an 'autoinclude' directory.
// Any include files in that folder will automatically be included in
// every scene file without the need for an include directive in the file.
// Include a collection of pre-defined colors.
include "colors.inc"

// Include some pre-defined basic surface types.
include "basicsurfs.inc"

// Main entry point to generate the scene
main
{
	viewport
	{
		// TODO: viewport types
		// type = 1; // perspective
		// type = 2; // anaglyph
		from = <1.0, -12.0, 3.0>;
		at = <0, 0, 1>;
		angle = 30;
	}

	visibility 50, Black;

	background White, SkyBlue
	{
	}

	light
	{
		location = <-10, -10, 30>;
		color = 0.5;
	}
	light
	{
		location = <10, -10, 30>;
		color = 0.5;
	}

	sphere
	{
		surface
		{
			color = OffWhite;
			ambient = 0.1;
			diffuse = 0.9;
			//reflection = Copper;
			specular = 0.4;
			Phong = 50;
			surface_shader
			{
				vector vt = vturb(O * 200, 4);
				//if (vt.x > 0.5)
					ON = bump(vt * 0.2);
				//ON = bump(vturb(<u*3000, v*3000, 0>, 4) * 0.05);
				//ON = bump(vrand());
			}
		}
		rotate <-25, 13, 30>;
		translate <0, 0, 1>;
	}

	float i;
	for (i = -6; i < 60; i = i + 2)
	{
		closed_cylinder <0, 0, 0>, <0, 0, 2 + frand() * 0.5>, 0.1
		{
			surface
			{
				color = vrand();
				ambient = 0.1;
				diffuse = 0.9;
				specular = 1.0;
				Phong = 1000;
			}
			translate <-2, i, 0>;
		}
	}

	npolygon 7
	{
		scale 100;
			surface
			{
				color = White;
				ambient = 0.1;
				diffuse = 0.9;
			}
	}

	repeat(10000)
	{
		sphere 0, 0.1
		{
			surface
			{
				color = vrand();
				ambient = 0.1;
				diffuse = 0.9;
				specular = 1.0;
				Phong = 100;
			}

			translate <0, 0, 13> + (vrand()-0.5) * <200, 200, 20>;
		}
	}
}
